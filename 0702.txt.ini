리액트 는 라이브러리 (꼇다,켰다), 컴포넌트 , 페북에서 만듬  // 뷰는 프레임워크 (자체 틀), 개인이..만듬
확장성 가능
자바스크립트 -> 리액트 -> 리액트네이티브 까지 가능 

기존 MVC 아키텍쳐의 단점을 보안
오직 뷰만 관리한다.!

초기렌더링 / 리렌더링 
리액트 : 수정된곳을 비교해서 바로 삭제 하고 바로 삽입 한다. 
기존 MVC 아키텍쳐  : 수정할곳을 찾아서 수정한다

리액트는 돔을 -> 버츄얼돔으로 사용한다.  

API 는 요청하고 주고 성호작용이 되어 // ex) 콘솔

돔 단점 : 동적 구조가 아님 / 정적 구조임 
동적 구조 할려면 자바스크립트 사용 
웹브라우저에서 돔이 움직이면 여기에 대한 시간 소비가 큼.. 돔자체가 느린게 아님 

리액트에서 데이터가 변하면 웹브라우저에서 실제 DOM을 업데이트 할 때 3가지 절차가 있다.
1. 데이터를 업데이트 하면 전체 UI를 Virtual Dom에 리렌더링 한다.
2. 이전 Virtual Dom에 있던 내용과 현재 내용을 비교한다. (삭제후 삽입)
3. 바뀐 부분만 실제 Dom에 적용한다. 
초기렌더링을 복사한상태에서 리렌더링 비교 하면 된다. 다시 읽는 구조가 아님 

리액트 단점은 회사마다 플젝 다름
즉 규모가 작은거 필요가없다.

cli환경에서 이루어지는데 
cli환경 -> node 모듈이 무조건 깔아진다. 너무 무거우니까 작은규모에서 오히려 불필요 
상태관리, 최적화 관리

상태관리 : 클릭수 조회 

리덕트 까지 최종 목표 
자바스크립트에서 리덕스방법
리액트안에서 리덕스 방법


node js : 크롬 자바스크립트 엔진 런타임 // 웹브라우저에서 아닌곳에서 자바스크립트 사용하기 위해 // 주요 도구가 다 있다. 
패키지 관리 해주는 npm 
npm(노드 버전 맞춰야함..) 대신해서 사용가능한게 yarn (버전 상관없음) : (캐쉬 시스템, 부가서비스 기능 제공 npm 보다 요즘 좋다)